---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Release

on:
  push:
    branches: ["main"]
    paths: ["charts/**/metadata.yaml"]
  workflow_dispatch:
    inputs:
      chart:
        description: Chart
        required: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.changed-files.outputs.changed_files }}
    steps:
      - name: Get Changed Files
        id: changed-files
        uses: bjw-s-labs/action-changed-files@b1144fc772fca235a50902c7bb6cc431cc7d8e27 # v0.3.2
        with:
          path: |
            apps/**/metadata.yaml

  changed:
    if: ${{ needs.prepare.outputs.changed-files != '[]' || github.event_name == 'workflow_dispatch' }}
    needs: ["prepare"]
    name: Get Changed Charts
    runs-on: ubuntu-latest
    outputs:
      charts: ${{ steps.charts.outputs.charts }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Extract Chart values
        id: charts
        run: |
          if [[ "${{ github.event_name }}" != "workflow_dispatch" ]]; then
              charts="${{ join(fromJSON(needs.prepare.outputs.changed-files), ' ') }}"
          else
              charts="charts/${{ inputs.chart }}/metadata.yaml"
          fi
          charts=$(yq eval-all --indent=0 --output-format=json "[.]" $charts)
          echo "charts=${charts}" >> $GITHUB_OUTPUT

  build:
    if: ${{ needs.changed.outputs.charts != '[]' }}
    needs: ["changed"]
    name: Build Charts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        charts: ${{ fromJSON(needs.changed.outputs.charts) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Install Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Add Helm Repository
        run: |
          helm repo add upstream ${{ matrix.charts.registry }}

      - name: Update Helm Repository
        run: |
          helm repo update upstream

      - name: Pull Chart
        run: |
          helm pull upstream/${{ matrix.charts.chart }} --version ${{ matrix.charts.version }}

      - name: Push Chart
        run: |
          helm push *.tgz oci://ghcr.io/${{ github.repository }}

      - name: Sign artifacts with Cosign
        run: |
          cosign sign --yes ghcr.io/${{ github.repository }}/${{ matrix.charts.chart }}:${{ matrix.charts.version }}

      - if: ${{ failure() }}
        name: Send Discord Webhook
        uses: sarisia/actions-status-discord@5ddd3b114a98457dd80a39b2f00b6a998cd69008 # v1.15.3
        with:
          color: "0xFF0000"
          description: |
            Chart: `${{ matrix.charts.chart }}`
            Version: `${{ matrix.charts.version }}`
            [Rebuild](${{ github.server_url }}/${{ github.repository }}/actions/workflows/release.yaml)
          nodetail: true
          title: Chart build failed
          username: GitHub Actions
          url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  status:
    if: ${{ !cancelled() }}
    needs: ["build"]
    name: Build Success
    runs-on: ubuntu-latest
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All jobs passed or skipped" && echo "${{ toJSON(needs.*.result) }}"
